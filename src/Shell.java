
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Authenticator;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.PasswordAuthentication;
import java.net.Proxy;
import java.net.URL;
import javax.swing.ImageIcon;
import org.json.JSONException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author thealien
 */
public class Shell extends javax.swing.JFrame {

    /**
     * Creates new form Shell
     */
    public Shell() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("AlienX - Ijaz Ur Rahim");
        try{
            ImageIcon img = new ImageIcon("icon.ico");
            setIconImage(img.getImage());
        }catch(Exception ex){
        }
        getRootPane().setDefaultButton(btnConnect);
        buttonGroup1.add(cHTTP);
        buttonGroup1.add(cHTTPS);
        buttonGroup1.add(cSOCKS);
        cHTTP.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        txtURL = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jInfo = new javax.swing.JLabel();
        boxProxy = new javax.swing.JCheckBox();
        txtHost = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cHTTP = new javax.swing.JRadioButton();
        cHTTPS = new javax.swing.JRadioButton();
        cSOCKS = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setSize(new java.awt.Dimension(816, 420));

        txtURL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtURLActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter your WebShell url");

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alienX2.png"))); // NOI18N

        jInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jInfo.setText("Coded by Ijaz Ur Rahim ( Muhammad Ibraheem )");
        jInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        boxProxy.setText("Set Proxy");
        boxProxy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxProxyActionPerformed(evt);
            }
        });

        txtHost.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHost.setEnabled(false);

        txtPort.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPort.setEnabled(false);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Host");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Port");

        cHTTP.setText("HTTP");
        cHTTP.setEnabled(false);
        cHTTP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cHTTPActionPerformed(evt);
            }
        });

        cHTTPS.setText("HTTPS");
        cHTTPS.setEnabled(false);
        cHTTPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cHTTPSActionPerformed(evt);
            }
        });

        cSOCKS.setText("SOCKS");
        cSOCKS.setEnabled(false);
        cSOCKS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSOCKSActionPerformed(evt);
            }
        });

        jLabel5.setText("Username");

        txtUser.setEnabled(false);

        txtPass.setEnabled(false);

        jLabel6.setText("Password");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("X");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(204, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(218, 218, 218))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(boxProxy)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cHTTP)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cHTTPS)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cSOCKS)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(214, 214, 214))))
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConnect)
                    .addComponent(boxProxy)
                    .addComponent(cHTTP)
                    .addComponent(cHTTPS)
                    .addComponent(cSOCKS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jInfo)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void close(){
    WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    private void txtURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtURLActionPerformed

    /**
     *
     * @param user
     * @param password
     * @return
     */
    public Authenticator getAuth(String user,String password){
        Authenticator authenticator = new Authenticator(){
            @Override
            public PasswordAuthentication getPasswordAuthentication(){
                return (new PasswordAuthentication(user,password.toCharArray()));
            }
        };
        return authenticator;
    }
    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        try {
            HttpURLConnection conn = null;
                String site = txtURL.getText().replace(" ", "+");
                URL url = new URL(site+"?action=Change");
            if(boxProxy.isSelected() && !txtHost.getText().equals("") && !txtPort.getText().equals("")){
                if(cHTTP.isSelected())
                    pRoxy = Proxy.Type.HTTP;
                else if(cHTTPS.isSelected())
                    pRoxy = Proxy.Type.HTTP;
                else if(cSOCKS.isSelected())
                    pRoxy = Proxy.Type.SOCKS;
                proxy = new Proxy(pRoxy, new InetSocketAddress(txtHost.getText(), Integer.parseInt(txtPort.getText())));
                if(!txtUser.getText().equals("") && !txtPass.getText().equals(""))
                    Authenticator.setDefault(getAuth(txtUser.getText(),txtPass.getText()));
                conn = (HttpURLConnection) url.openConnection(proxy);

            }
            else
            {
                conn = (HttpURLConnection) url.openConnection();
            }
            // TODO add your handling code here:
            conn.setRequestMethod("GET");
            conn.setConnectTimeout(10000);
            conn.setRequestProperty("User-Agent", "Mozilla/5.0");
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            StringBuilder result1 = new StringBuilder();
            String line;
            while ((line = br.readLine()) != null) {
                result1.append(line);
            }
            br.close();
            data = result1.toString();
            if(data.startsWith("{")){
                close();
                new Sshell(site,proxy,data).setVisible(true);
            }
            else{
                jInfo.setText("Please Enter Correct WebShell URL");
                new java.util.Timer().schedule( 
                    new java.util.TimerTask() {
                        @Override
                        public void run() {
                            jInfo.setText("Coded by Ijaz Ur Rahim ( Muhammad Ibraheem )");
                        }
                    },
                    2000); 
                  }
        }  catch (IOException ex) {
            jInfo.setText("Please Check Internet Connection or Enter Correct Url");
            new java.util.Timer().schedule( 
            new java.util.TimerTask() {
                @Override
                public void run() {
                    jInfo.setText("Coded by Ijaz Ur Rahim ( Muhammad Ibraheem )");
                }
            },
              2000); 
        }
        catch(JSONException ex){
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void boxProxyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxProxyActionPerformed
        // TODO add your handling code here:
        if(boxProxy.isSelected()){
            txtHost.setEnabled(true);
            txtPort.setEnabled(true);
            cHTTP.setEnabled(true);
            cHTTPS.setEnabled(true);
            cSOCKS.setEnabled(true);
        }
        else
        {
            txtHost.setEnabled(false);
            txtPort.setEnabled(false);
            cHTTP.setEnabled(false);
            cHTTPS.setEnabled(false);
            cSOCKS.setEnabled(false);
        }
    }//GEN-LAST:event_boxProxyActionPerformed

    private void cSOCKSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSOCKSActionPerformed
        // TODO add your handling code here:
            txtUser.setEnabled(true);
            txtPass.setEnabled(true);
    }//GEN-LAST:event_cSOCKSActionPerformed

    private void cHTTPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cHTTPActionPerformed
        // TODO add your handling code here:
        
            txtUser.setEnabled(false);
            txtPass.setEnabled(false);
    }//GEN-LAST:event_cHTTPActionPerformed

    private void cHTTPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cHTTPSActionPerformed
        // TODO add your handling code here:
        
            txtUser.setEnabled(false);
            txtPass.setEnabled(false);
    }//GEN-LAST:event_cHTTPSActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        }
        //</editor-fold>
        
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Shell().setVisible(true);
            }
        }); 
    }
    private Proxy proxy = null;
    private String data;
    private Proxy.Type pRoxy = Proxy.Type.HTTP;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox boxProxy;
    private javax.swing.JButton btnConnect;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton cHTTP;
    private javax.swing.JRadioButton cHTTPS;
    private javax.swing.JRadioButton cSOCKS;
    private javax.swing.JLabel jInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtURL;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
